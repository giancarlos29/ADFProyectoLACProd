{
    "name": "PipelineRedshift-to-SQLServer",
    "properties": {
        "description": "Pipeline designed to incremental load using Watermark Columns from Amazon Web Services RedShift to SQLServer.",
        "activities": [
            {
                "name": "GetCfgTable",
                "description": "We get the configuration table which allow us to find the names of the tables and columns of the DB to perform the copy activity a few steps ahead.",
                "type": "Lookup",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "SqlServerSource",
                        "sqlReaderQuery": {
                            "value": "SELECT * from @{pipeline().parameters.ConfigTable} where enabled = 1\nIF @@ROWCOUNT = 0 THROW 50000,'No rows in configuration table!',1",
                            "type": "Expression"
                        }
                    },
                    "dataset": {
                        "referenceName": "ClippersDeRedShiftaSQLServer",
                        "type": "DatasetReference",
                        "parameters": {
                            "TableName": "dummy"
                        }
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "SourceFilterAWS",
                "description": "In this activity we filter the tables containing 'AWS' in Source Name which allow us to identify the tables having a Watermark Column.",
                "type": "Filter",
                "dependsOn": [
                    {
                        "activity": "GetCfgTable",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('GetCfgTable').output.value",
                        "type": "Expression"
                    },
                    "condition": {
                        "value": "@equals(item().SRC_name, 'AWS')",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "For Each RedShiftaSQL",
                "description": "We get the tables allowing us to iterate over the filter from our previous activity.",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "SourceFilterAWS",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('SourceFilterAWS').output.value",
                        "type": "Expression"
                    },
                    "activities": [
                        {
                            "name": "GETMAXAWS",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AmazonRedshiftSource",
                                    "query": {
                                        "value": "SELECT MAX(@{item().WatermarkColumn}) \nas maxd FROM @{item().SRC_tab} ",
                                        "type": "Expression"
                                    }
                                },
                                "dataset": {
                                    "referenceName": "AmazonRedShift",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "TableName": {
                                            "value": "@pipeline().parameters.ConfigTable",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "firstRowOnly": true
                            }
                        },
                        {
                            "name": "Copy From AWS",
                            "type": "Copy",
                            "dependsOn": [
                                {
                                    "activity": "VariableFecha",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AmazonRedshiftSource",
                                    "query": {
                                        "value": "SELECT @{item().Cols} FROM @{item().SRC_tab}\nWHERE @{item().WatermarkColumn} > \n'@{item().WatermarkValue}'\nAND\n@{item().WatermarkColumn} <=\n'@{variables('varLaClippers')}' \nlimit 10",
                                        "type": "Expression"
                                    }
                                },
                                "sink": {
                                    "type": "SqlServerSink",
                                    "preCopyScript": {
                                        "value": "truncate table @{item().DST_Tab}",
                                        "type": "Expression"
                                    }
                                },
                                "enableStaging": false
                            },
                            "inputs": [
                                {
                                    "referenceName": "AmazonRedShift",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "TableName": {
                                            "value": "@pipeline().parameters.ConfigTable",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "outputs": [
                                {
                                    "referenceName": "ClippersDeRedShiftaSQLServer",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "TableName": {
                                            "value": "@{item().DST_tab}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "SP UPDATE WATERMARK AWS",
                            "type": "SqlServerStoredProcedure",
                            "dependsOn": [
                                {
                                    "activity": "Copy From AWS",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "storedProcedureName": "[load].[sp_UpdateWatermak]",
                                "storedProcedureParameters": {
                                    "id": {
                                        "value": {
                                            "value": "@{item().id}",
                                            "type": "Expression"
                                        },
                                        "type": "int16"
                                    },
                                    "NewWatermark": {
                                        "value": {
                                            "value": "@{variables('varLaClippers')}",
                                            "type": "Expression"
                                        },
                                        "type": "DateTime"
                                    }
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "SqlServer1",
                                "type": "LinkedServiceReference"
                            }
                        },
                        {
                            "name": "VariableFecha",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "GETMAXAWS",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "varLaClippers",
                                "value": {
                                    "value": "@coalesce(activity('GETMAXAWS').output?.firstRow?.MAXD,formatDateTime(utcnow()))",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "SourceFilterNotDate",
                "description": "In this activity we filter the tables containing 'Not Date' in Source Name which allow us to identify the tables not having a Watermark Column.",
                "type": "Filter",
                "dependsOn": [
                    {
                        "activity": "GetCfgTable",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('GetCfgTable').output.value",
                        "type": "Expression"
                    },
                    "condition": {
                        "value": "@equals(item().SRC_name, 'NotDate')",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "ForEachTableNotDate",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "SourceFilterNotDate",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('SourceFilterNotDate').output.value",
                        "type": "Expression"
                    },
                    "activities": [
                        {
                            "name": "CopyTableNotDate",
                            "type": "Copy",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AmazonRedshiftSource",
                                    "query": {
                                        "value": "SELECT @{item().Cols} FROM @{item().SRC_tab}\nlimit 10",
                                        "type": "Expression"
                                    }
                                },
                                "sink": {
                                    "type": "SqlServerSink",
                                    "preCopyScript": {
                                        "value": "truncate table @{item().DST_Tab}",
                                        "type": "Expression"
                                    }
                                },
                                "enableStaging": false
                            },
                            "inputs": [
                                {
                                    "referenceName": "AmazonRedShift",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "TableName": {
                                            "value": "@pipeline().parameters.ConfigTable",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "outputs": [
                                {
                                    "referenceName": "ClippersDeRedShiftaSQLServer",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "TableName": {
                                            "value": "@{item().DST_tab}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "SqlSPWaterMarkValueNotDAte",
                            "type": "SqlServerStoredProcedure",
                            "dependsOn": [
                                {
                                    "activity": "CopyTableNotDate",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "storedProcedureName": "[load].[sp_UpdateWatermak]",
                                "storedProcedureParameters": {
                                    "id": {
                                        "value": {
                                            "value": "@{item().id}",
                                            "type": "Expression"
                                        },
                                        "type": "int16"
                                    },
                                    "NewWatermark": {
                                        "value": {
                                            "value": "@formatDateTime(utcnow())",
                                            "type": "Expression"
                                        },
                                        "type": "DateTime"
                                    }
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "ClippersRedShiftASQLServer",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "ConfigTable": {
                "type": "string",
                "defaultValue": "load.Config"
            }
        },
        "variables": {
            "varLaClippers": {
                "type": "String",
                "defaultValue": "dummy"
            }
        },
        "annotations": []
    },
    "type": "Microsoft.DataFactory/factories/pipelines"
}